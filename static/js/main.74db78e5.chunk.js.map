{"version":3,"sources":["componets/SignIn.js","componets/AddDepModal.js","componets/EditDepModal.js","componets/Navigation.js","componets/Department.js","componets/Home.js","componets/AddEmployeeModal.js","componets/EditEmployeeModal.js","componets/Employee.js","componets/PaginaInicio.js","componets/SignIn2.js","componets/Formulario.js","App.js","serviceWorker.js","componets/IniPrueba.js","index.js"],"names":["makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","AddDepModal","props","snackbarClose","event","setState","snackbaropen","state","snackbarmsg","handlerSubmit","bind","preventDefault","fetch","method","headers","body","JSON","stringify","DepartmentID","DepartmentName","target","value","then","res","json","result","error","className","Snackbar","anchorOrigin","vertical","horizontal","open","this","autoHideDuration","onClose","message","id","action","IconButton","key","aria-label","color","onClick","Modal","size","aria-labelledby","centered","Header","closeButton","Title","Body","Row","Col","sm","Form","onSubmit","Group","controlId","Label","Control","type","name","required","placeholder","Button","variant","Footer","onHide","Component","EditDepModal","disabled","defaultValue","depid","depname","Navigation","Navbar","bg","expand","Toggle","aria-controls","Collapse","Nav","to","Department","fab","absolute","position","bottom","right","deps","addModalShow","editDepModal","refreshList","response","data","editModalClose","editModalShow","Table","striped","bordered","hover","map","dep","ButtonToolbar","Tooltip","title","Fab","show","Home","AddEmployeeModal","EmployeeID","EmployeeName","MailID","DOJ","as","EditEmployeeModal","empdepart","empemail","empFecha","Employee","editEmployeeModal","SignIn2","history","push","Accept","Email","Password","Response","Status","swal","text","Message","buttons","icon","timer","positions","alert","Container","component","maxWidth","CssBaseline","Typography","noValidate","TextField","fullWidth","label","autoComplete","autoFocus","FormControlLabel","control","Checkbox","Grid","container","item","xs","Link","href","Box","mt","root","button","marginRight","instructions","marginBottom","App","path","exact","Boolean","window","location","hostname","match","BOTTOM_CENTER","transitions","SCALE","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.74db78e5.chunk.js","sourcesContent":["import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\n//import LockOutlinedIcon from '@material-ui/icons/LockOutlinedIcon';\r\n                            // '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          {/* <LockOutlinedIcon /> */}\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import React, {Component} from 'react';\r\nimport {Modal,  Button, Row, Col, Form} from 'react-bootstrap';\r\n//import { Department } from './Department';\r\n\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport SignIn from './SignIn';\r\n\r\nexport class AddDepModal extends Component{\r\n\r\n        constructor(props){\r\n\r\n            super(props);\r\n            //IconButton\r\n            this.state = {snackbaropen: false, snackbarmsg:'' };\r\n            this.handlerSubmit = this.handlerSubmit.bind(this );\r\n        }\r\n\r\n        //funcion snackbarclose\r\n        snackbarClose = (event) =>{\r\n            this.setState({snackbaropen: false});\r\n        };\r\n\r\n        handlerSubmit(event){\r\n                event.preventDefault();\r\n\r\n                //alert(event.target.DepartmentName.value);\r\n\r\n                fetch('http://localhost:22692/api/Department',{\r\n                    method: 'POST',\r\n                    headers:{\r\n                        'Accept':'application/json',\r\n                        'Content-Type':'application/json'\r\n                    },\r\n                    body:JSON.stringify({\r\n                        DepartmentID:null,\r\n                        DepartmentName: event.target.DepartmentName.value\r\n                    })\r\n                    \r\n                })\r\n                .then(res=> res.json())\r\n                .then((result)=>\r\n                {\r\n                    //alert(result);\r\n                    this.setState({snackbaropen:true, snackbarmsg:result})\r\n                },\r\n                (error)=>{\r\n                    //alert('Failed')\r\n                    this.setState({snackbaropen:true, snackbarmsg:'Failed'})\r\n                }\r\n                )\r\n\r\n                \r\n        }\r\n\r\n\r\n        render(){\r\n            return(\r\n\r\n\r\n    \r\n        <div className=\"container\">\r\n\r\n        {/* SnackBar - alerta con Material UI*/}\r\n        \r\n          <Snackbar \r\n           anchorOrigin={{vertical:'center', horizontal:'center'}}\r\n           open = {this.state.snackbaropen}\r\n           autoHideDuration = {3000}\r\n           onClose = {this.snackbarClose}\r\n           message = {<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n           action = {[\r\n               <IconButton\r\n                key=\"close\"\r\n                aria-label=\"Close\"\r\n                color=\"inherit\"\r\n                onClick={this.snackbarClose}\r\n               >\r\n                   x\r\n               </IconButton>\r\n           ]}\r\n           />\r\n\r\n          \r\n\r\n\r\n        {/* Ventana modal - ingresar departamento*/}\r\n\r\n                <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n              >\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Datos del Departamento\r\n                  </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                 \r\n                   \r\n        {/* Completar los campos de formulario para el Departamento */}\r\n\r\n                    <Row>\r\n                        <Col sm={6}>\r\n                            <Form onSubmit={this.handlerSubmit} >\r\n                            <Form.Group controlId=\"DepartmentName\">\r\n                                <Form.Label>Nombre del Departamento</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"DepartmentName\"\r\n                                    required\r\n                                    placeholder=\"Nombre del Departamento\"\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group>\r\n                                    \r\n                                    <SignIn className=\"mt-5 d-flex justify-content-left\"></SignIn>\r\n                                     \r\n                            </Form.Group> */}\r\n\r\n                                <Form.Group>\r\n                                    <Button variant=\"primary\" type=\"submit\" >Agregar</Button>\r\n                                     \r\n                                </Form.Group>\r\n\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                  \r\n\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n\r\n    \r\n        </div>\r\n\r\n            )\r\n\r\n        }\r\n\r\n}","import React, {Component} from 'react';\r\nimport {Modal,  Button, Row, Col, Form} from 'react-bootstrap';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton'; \r\n\r\n\r\nexport class EditDepModal extends Component{\r\n\r\n    constructor(props){\r\n\r\n        super(props);\r\n        this.state = {snackbaropen: false, snackbarmsg:'' };\r\n        this.handlerSubmit = this.handlerSubmit.bind(this );\r\n    }\r\n\r\n    //funcion snackbarclose\r\n    snackbarClose = (event) =>{\r\n    this.setState({snackbaropen: false});\r\n    };\r\n    \r\n    handlerSubmit(event){\r\n                event.preventDefault();\r\n\r\n                //alert(event.target.DepartmentName.value);\r\n\r\n                fetch('http://localhost:22692/api/Department',{\r\n                    method: 'PUT',\r\n                    headers:{\r\n                        'Accept':'application/json',\r\n                        'Content-Type':'application/json'\r\n                    },\r\n                    body:JSON.stringify({\r\n                        DepartmentID:event.target.DepartmentID.value,\r\n                        DepartmentName: event.target.DepartmentName.value\r\n                    })\r\n                    \r\n                })\r\n                .then(res=> res.json())\r\n                .then((result)=>\r\n                {\r\n                    //alert(result);\r\n                    this.setState({snackbaropen:true, snackbarmsg:result})\r\n                },\r\n                (error)=>{\r\n                    //alert('Failed')\r\n                    this.setState({snackbaropen:true, snackbarmsg:'Failed'})\r\n                }\r\n                )                \r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n\r\n\r\n\r\n    <div className=\"container\">\r\n\r\n    {/* SnackBar - alerta con Material UI*/}\r\n    \r\n      <Snackbar \r\n       anchorOrigin={{vertical:'center', horizontal:'center'}}\r\n       open = {this.state.snackbaropen}\r\n       autoHideDuration = {3000}\r\n       onClose = {this.snackbarClose}\r\n       message = {<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n       action = {[\r\n           <IconButton\r\n            key=\"close\"\r\n            aria-label=\"Close\"\r\n           // color=\"inherit\"\r\n           color=\"inherit\"\r\n            onClick={this.snackbarClose}\r\n           >\r\n               x\r\n           </IconButton>\r\n       ]}\r\n       />\r\n\r\n      \r\n\r\n\r\n    {/* Ventana modal - ingresar departamento*/}\r\n\r\n            <Modal\r\n            {...this.props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Edit Departamento\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n             \r\n               \r\n    {/* Completar los campos de formulario para el Departamento */}\r\n\r\n                <Row>\r\n                    <Col sm={6}>\r\n                        <Form onSubmit={this.handlerSubmit} >\r\n\r\n                        <Form.Group controlId=\"DepartmentID\">\r\n                            <Form.Label>DepartmentID</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                name=\"DepartmentID\"\r\n                                required\r\n                                disabled\r\n                                defaultValue = {this.props.depid}\r\n                                placeholder=\"DepartmentID\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n\r\n\r\n\r\n\r\n                        <Form.Group controlId=\"DepartmentName\">\r\n                            <Form.Label>Nombre del Departamento</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                name=\"DepartmentName\"\r\n                                required\r\n                                defaultValue = {this.props.depname}\r\n                                placeholder=\"Nombre del Departamento\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        \r\n\r\n                            <Form.Group>\r\n                                <Button variant=\"primary\" type=\"submit\"  onClick={this.props.onHide} >\r\n                                    Actualizar\r\n                                </Button>\r\n                                 \r\n                            </Form.Group>\r\n\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n\r\n              \r\n\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n\r\n    </div>\r\n\r\n        )\r\n\r\n    }\r\n\r\n\r\n}","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n\r\n\r\nexport class Navigation extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar bg=\"dark\" expand=\"lg\">\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav>\r\n              <NavLink className=\"d-inline p-2 bg-dark text-white\" to=\"/Home\">\r\n                Inicio\r\n              </NavLink>\r\n\r\n              <NavLink\r\n                className=\"d-inline p-2 bg-dark text-white\"\r\n                to=\"/department\"\r\n              >\r\n                Departmento\r\n              </NavLink>\r\n\r\n              <NavLink\r\n                className=\"d-inline p-2 bg-dark text-white\"\r\n                to=\"/employee\"\r\n              >\r\n                Colaboradores\r\n              </NavLink>\r\n\r\n              <NavLink\r\n                className=\"d-inline p-2 bg-dark text-white\"\r\n                to=\"/Formulario\"\r\n              >\r\n                Registro\r\n              </NavLink>\r\n\r\n              <NavLink\r\n                className=\"d-inline p-2 bg-dark text-white\"\r\n                to=\"/SignIn2\"\r\n              >\r\n                SignIn2\r\n              </NavLink>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\n\r\nimport {Table} from  'react-bootstrap';\r\n//import {Form} from  'react-bootstrap';\r\n\r\nimport {Button, ButtonToolbar} from 'react-bootstrap';\r\nimport {AddDepModal}  from './AddDepModal';\r\nimport {EditDepModal} from './EditDepModal';\r\nimport { Navigation } from './Navigation';\r\n//import { Navigation } from './Navigation';\r\n//import {types} from './typeS';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ButtonM from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    fab: {\r\n      margin: theme.spacing(2),\r\n    },\r\n    absolute: {\r\n      position: 'absolute',\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(3),\r\n    },\r\n  }));\r\n\r\nexport class Department extends Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {deps:[], addModalShow : false, editDepModal : false}\r\n\r\n        \r\n    }\r\n    \r\n\r\n    componentDidMount(){\r\n        this.refreshList();\r\n    }\r\n\r\n    refreshList(){\r\n\r\n        fetch('http://localhost:22692/api/Department')\r\n        .then(response=> response.json())\r\n        .then(data => {\r\n            this.setState({deps:data});\r\n         }\r\n           );\r\n\r\n        // this.setState({\r\n        //     deps:[{\"DepartmentID\":1, \"DepartmentName\":\"IT\"},\r\n        //           {\"DepartmentID\":2, \"DepartmentName\":\"IT\"}\r\n        \r\n        // ]\r\n        // })\r\n    }\r\n\r\n\r\n    componentDidUpdate(){\r\n        this.refreshList();\r\n    }\r\n\r\n    render(){\r\n        //const classes = useStyles();\r\n\r\n        const {deps, depid, depname} = this.state;\r\n        let addModalClose  =() => this.setState({addModalShow:false});\r\n        let editModalClose =() => this.setState({editModalShow:false});\r\n\r\n        return(\r\n\r\n            \r\n\r\n            <div>\r\n                <Navigation></Navigation>\r\n\r\n                <Table className=\"mt-4\" striped bordered hover size=\"sm\">\r\n\r\n                \r\n                \r\n                <thead>\r\n                    <tr>\r\n                          <th>Codigo del Departamento</th>\r\n                          <th>Nombre Departmento</th>\r\n                          <th>Option</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {deps.map(dep=>\r\n                        \r\n                    <tr key = {dep.DepartmentID} > \r\n                        \r\n                    <td>{dep.DepartmentID}</td>\r\n                    <td>{dep.DepartmentName}</td>\r\n                    <td>\r\n                        <ButtonToolbar>\r\n                            {/* <Button \r\n                            className=\"mr-2\" \r\n                            //variant=\"info\"\r\n                            //color=\"primary\"\r\n                            color=\"\"\r\n                            \r\n                            // OnClick={()=> this.setState({editModalShow:true, depid:dep.DepartmentID, depname:dep.DepartmentName}) }\r\n                               onClick={()=> this.setState({editModalShow:true, depid:dep.DepartmentID, depname:dep.DepartmentName}) }\r\n                            >\r\n                                Editar\r\n                            </Button> */}\r\n\r\n                            {/* <ButtonM \r\n                                variant=\"contained\" \r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                onClick={()=> this.setState({editModalShow:true, depid:dep.DepartmentID, depname:dep.DepartmentName}) }\r\n                            >\r\n                                Editar\r\n                            </ButtonM> */}\r\n                            \r\n                            \r\n                            <Tooltip title=\"Agregar\" aria-label=\"add\"\r\n                                onClick={()=> this.setState({editModalShow:true, depid:dep.DepartmentID, depname:dep.DepartmentName}) }\r\n                            >\r\n                                <Fab \r\n                                    size=\"small\" \r\n                                    color=\"primary\" \r\n                                    aria-label=\"add\" >\r\n                                    \r\n                                    <EditIcon />\r\n                                    \r\n                                </Fab>\r\n                            </Tooltip>\r\n\r\n\r\n                            {/* <EditDepModal \r\n                              show ={this.setState.editModalShow}\r\n                              onHide ={editModalClose}\r\n                              depid={depid}\r\n                              depname={depname}\r\n                            /> */}\r\n\r\n                        <EditDepModal\r\n                        show={this.state.editModalShow}\r\n                        onHide={editModalClose}\r\n                        depid={depid}\r\n                        depname={depname}\r\n                        />\r\n\r\n                        </ButtonToolbar>\r\n                    </td>\r\n                    </tr>\r\n\r\n                    )}\r\n                </tbody>\r\n                \r\n                </Table>\r\n\r\n                <ButtonToolbar>\r\n                    {/* <Button  \r\n                    variant='primary'\r\n                    onClick= {()=> this.setState({addModalShow: true}) } >\r\n                        Agregar\r\n                    </Button> */}\r\n\r\n\r\n                <Tooltip title=\"Agregar\" aria-label=\"add\"\r\n                     onClick= {()=> this.setState({addModalShow: true}) }\r\n                >\r\n                    <Fab color=\"primary\" /*className={classes.fab}*/ >\r\n                            <AddIcon />\r\n                    </Fab>\r\n                </Tooltip>\r\n\r\n                <AddDepModal\r\n                        show={this.state.addModalShow}\r\n                        onHide={addModalClose}\r\n                        />\r\n\r\n                </ButtonToolbar>\r\n\r\n\r\n              \r\n\r\n\r\n                </div>\r\n\r\n            // <div className=\"mt-5 d-flex justify-content-left\">\r\n            //     <h3>Este es el departamento\r\n            //     </h3>\r\n            // </div>\r\n        )\r\n    }\r\n\r\n}","import React, {Component} from 'react';\r\nimport { Department } from './Department';\r\nimport SignIn from './SignIn';\r\nimport { Navigation } from './Navigation';\r\nimport {Table} from  'react-bootstrap';\r\n\r\n\r\nexport class Home extends Component{\r\n\r\n\r\n    render(){\r\n        return(\r\n\r\n            \r\n            <div className=\"mt-5 d-flex justify-content-left\">\r\n               \r\n\r\n                <Table className=\"mt-4\" striped bordered hover size=\"sm\">\r\n                <h3>Bienvenido al portal.\r\n                    Esta es la pagina principal\r\n                </h3>\r\n                </Table>\r\n\r\n              \r\n\r\n               {/* <SignIn></SignIn> */}\r\n            </div>\r\n\r\n          \r\n        )\r\n    }\r\n\r\n}","import React, {Component} from 'react';\r\nimport {Modal,  Button, Row, Col, Form} from 'react-bootstrap';\r\n//import { Department } from './Department';\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\n\r\n\r\nexport class AddEmployeeModal extends Component{\r\n\r\n        constructor(props){\r\n\r\n            super(props);\r\n            //IconButton\r\n            this.state = {deps:[], snackbaropen: false, snackbarmsg:'' };\r\n            this.handlerSubmit = this.handlerSubmit.bind(this );\r\n        }\r\n\r\n        componentDidMount(){\r\n\r\n            fetch('http://localhost:22692/api/department')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({deps:data});\r\n            });\r\n\r\n        }\r\n\r\n        //funcion snackbarclose\r\n        snackbarClose = (event) =>{\r\n            this.setState({snackbaropen: false});\r\n        };\r\n\r\n        handlerSubmit(event){\r\n                event.preventDefault();\r\n\r\n                //alert(event.target.DepartmentName.value);\r\n\r\n                fetch('http://localhost:22692/api/Employee',{\r\n                    method: 'POST',\r\n                    headers:{\r\n                        'Accept':'application/json',\r\n                        'Content-Type':'application/json'\r\n                    },\r\n                    body:JSON.stringify({\r\n                        EmployeeID:null,\r\n                        EmployeeName: event.target.EmployeeName.value,\r\n                        Department: event.target.Department.value,\r\n                        MailID: event.target.MailID.value,\r\n                        DOJ: event.target.DOJ.value\r\n                    })\r\n                    \r\n                })\r\n                .then(res=> res.json())\r\n                .then((result)=>\r\n                {\r\n                    //alert(result);\r\n                    this.setState({snackbaropen:true, snackbarmsg:result})\r\n                },\r\n                (error)=>{\r\n                    //alert('Failed')\r\n                    this.setState({snackbaropen:true, snackbarmsg:'Failed'})\r\n                }\r\n                )\r\n\r\n                \r\n        }\r\n\r\n\r\n        render(){\r\n            return(\r\n\r\n\r\n    \r\n        <div className=\"container\">\r\n\r\n        {/* SnackBar - alerta con Material UI*/}\r\n        \r\n          <Snackbar \r\n           anchorOrigin={{vertical:'center', horizontal:'center'}}\r\n           open = {this.state.snackbaropen}\r\n           autoHideDuration = {3000}\r\n           onClose = {this.snackbarClose}\r\n           message = {<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n           action = {[\r\n               <IconButton\r\n                key=\"close\"\r\n                aria-label=\"Close\"\r\n                color=\"inherit\"\r\n                onClick={this.snackbarClose}\r\n               >\r\n                   x\r\n               </IconButton>\r\n           ]}\r\n           />\r\n\r\n          \r\n\r\n\r\n        {/* Ventana modal - ingresar departamento*/}\r\n\r\n                <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n              >\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Datos del Empleado\r\n                  </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                 \r\n                   \r\n        {/* Completar los campos de formulario para el Departamento */}\r\n\r\n                    <Row>\r\n                        <Col sm={6}>\r\n                            <Form onSubmit={this.handlerSubmit} >\r\n\r\n                            <Form.Group controlId=\"EmployeeName\">\r\n                                <Form.Label>Nombre </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"EmployeeName\"\r\n                                    required\r\n                                    placeholder=\"Nombre\"\r\n                                />\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId=\"Department\">\r\n                                <Form.Label>Departmento </Form.Label>\r\n                                {/* <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"Department\"\r\n                                    required\r\n                                    placeholder=\"Nombre del Departamento\"\r\n                                /> */}\r\n\r\n                                <Form.Control as ='select'>\r\n\r\n                                    {this.state.deps.map( dep => \r\n                                        <option key={dep.DepartmentID}>{dep.DepartmentName}</option>\r\n                                        )}\r\n\r\n                                </Form.Control>\r\n\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"MailID\">\r\n                                <Form.Label>Correo Electronico </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"email\"\r\n                                    name=\"MailID\"\r\n                                    required\r\n                                    placeholder=\"name@example.com\"\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"DOJ\">\r\n                                <Form.Label>Fecha Ingreso </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"date\"\r\n                                    name=\"DOJ\"\r\n                                    required\r\n                                    placeholder=\"Fecha Ingreso\"\r\n                                />\r\n                            </Form.Group>\r\n\r\n                                <Form.Group>\r\n                                    <Button variant=\"primary\" type=\"submit\" onClick={this.props.onHide} >Agregar</Button>\r\n                                     \r\n                                </Form.Group>\r\n\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                  \r\n\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n\r\n    \r\n        </div>\r\n\r\n            )\r\n\r\n        }\r\n\r\n}","import React, {Component} from 'react';\r\nimport {Modal,  Button, Row, Col, Form} from 'react-bootstrap';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton'; \r\n\r\n\r\nexport class EditEmployeeModal extends Component{\r\n\r\n    constructor(props){\r\n\r\n        super(props);\r\n        this.state = {snackbaropen: false, snackbarmsg:'' };\r\n        this.handlerSubmit = this.handlerSubmit.bind(this );\r\n    }\r\n\r\n    //funcion snackbarclose\r\n    snackbarClose = (event) =>{\r\n    this.setState({snackbaropen: false});\r\n    };\r\n    \r\n    handlerSubmit(event){\r\n                event.preventDefault();\r\n\r\n                //alert(event.target.DepartmentName.value);\r\n\r\n                fetch('http://localhost:22692/api/employee',{\r\n                    method: 'PUT',\r\n                    headers:{\r\n                        'Accept':'application/json',\r\n                        'Content-Type':'application/json'\r\n                    },\r\n                    body:JSON.stringify({\r\n                        EmployeeID:event.target.EmployeeID.value,\r\n                        EmployeeName: event.target.EmployeeName.value,\r\n                        Department: event.target.Department.value,\r\n                        MailID: event.target.MailID.value,\r\n                        DOJ: event.target.DOJ.value\r\n                    })\r\n                    \r\n                })\r\n                .then(res=> res.json())\r\n                .then((result)=>\r\n                {\r\n                    //alert(result);\r\n                    this.setState({snackbaropen:true, snackbarmsg:result})\r\n                },\r\n                (error)=>{\r\n                    //alert('Failed')\r\n                    this.setState({snackbaropen:true, snackbarmsg:'Failed'})\r\n                }\r\n                )                \r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n\r\n\r\n\r\n    <div className=\"container\">\r\n\r\n    {/* SnackBar - alerta con Material UI*/}\r\n    \r\n      <Snackbar \r\n       anchorOrigin={{vertical:'center', horizontal:'center'}}\r\n       open = {this.state.snackbaropen}\r\n       autoHideDuration = {3000}\r\n       onClose = {this.snackbarClose}\r\n       message = {<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n       action = {[\r\n           <IconButton\r\n            key=\"close\"\r\n            aria-label=\"Close\"\r\n           // color=\"inherit\"\r\n           color=\"inherit\"\r\n            onClick={this.snackbarClose}\r\n           >\r\n               x\r\n           </IconButton>\r\n       ]}\r\n       />\r\n\r\n      \r\n\r\n\r\n    {/* Ventana modal - ingresar departamento*/}\r\n\r\n            <Modal\r\n            {...this.props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Datos del Empleado\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n             \r\n               \r\n    {/* Completar los campos de formulario para el Departamento */}\r\n\r\n                <Row>\r\n                    <Col sm={6}>\r\n                        <Form onSubmit={this.handlerSubmit} >\r\n\r\n                        <Form.Group controlId=\"EmployeeID\">\r\n                            <Form.Label>Codigo</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                name=\"EmployeeID\"\r\n                                required\r\n                                disabled\r\n                                defaultValue = {this.props.depid}\r\n                                placeholder=\"EmployeeID\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n\r\n\r\n\r\n\r\n                        <Form.Group controlId=\"EmployeeName\">\r\n                            <Form.Label>Nombre del Empleado</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                name=\"EmployeeName\"\r\n                                required\r\n                                defaultValue = {this.props.depname}\r\n                                placeholder=\"Nombre del Empleado\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group controlId=\"Department\">\r\n                            <Form.Label>Nombre del Departamento</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                name=\"Department\"\r\n                                required\r\n                                defaultValue = {this.props.empdepart}\r\n                                placeholder=\"Nombre del Departamento\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        \r\n\r\n\r\n\r\n\r\n\r\n                        <Form.Group controlId=\"MailID\">\r\n                            <Form.Label>Correo Electronico </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                name=\"MailID\"\r\n                                required\r\n                                defaultValue = {this.props.empemail}\r\n                                placeholder=\"Correo Electronico\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n\r\n                        \r\n                        <Form.Group controlId=\"DOJ\">\r\n                            <Form.Label>Fecha Ingreso</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                name=\"DOJ\"\r\n                                required\r\n                                defaultValue = {this.props.empFecha}\r\n                                placeholder=\"Fecha Ingreso\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n                            <Form.Group>\r\n                                <Button variant=\"primary\" type=\"submit\"  onClick={this.props.onHide} >\r\n                                    Actualizar\r\n                                </Button>\r\n                                 \r\n                            </Form.Group>\r\n\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n\r\n              \r\n\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n\r\n    </div>\r\n\r\n        )\r\n\r\n    }\r\n\r\n\r\n}","import React, {Component} from 'react'\r\nimport {Table} from  'react-bootstrap';\r\nimport {Button, ButtonToolbar} from 'react-bootstrap';\r\nimport {AddEmployeeModal}  from './AddEmployeeModal';\r\n//import {EditDepModal} from './EditDepModal';\r\nimport {EditEmployeeModal} from './EditEmployeeModal';\r\nimport { Navigation } from './Navigation';\r\n\r\nexport class Employee extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {deps:[], addModalShow : false, editEmployeeModal : false}\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.refreshList();\r\n    }\r\n\r\n    refreshList(){\r\n\r\n        fetch('http://localhost:22692/api/employee')\r\n        .then(response=> response.json())\r\n        .then(data => {\r\n            this.setState({deps:data});\r\n         }\r\n           );\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.refreshList();\r\n    }\r\n\r\n    render(){\r\n\r\n        const {deps, depid, depname, empdepart, empemail, empFecha } = this.state;\r\n        let addModalClose  =() => this.setState({addModalShow:false});\r\n        let editModalClose =() => this.setState({editModalShow:false});\r\n\r\n        return(\r\n            // <div className=\"mt-5 d-flex justify-content-left\">\r\n            //     <h3>Este es el Empliado v\r\n            //     </h3>\r\n\r\n            // </div>\r\n\r\n            <div>\r\n\r\n                <Navigation></Navigation>\r\n\r\n            <Table className=\"mt-4\" striped bordered hover size=\"sm\">\r\n\r\n                \r\n\r\n            <thead>\r\n                <tr>\r\n                    <th>Codigo</th>\r\n                    <th>Nombre del Empleado</th>\r\n                    <th>Departmento</th>\r\n                    <th>Correo Electronico</th>\r\n                    <th>Fecha Ingreso</th>\r\n                    <th>Option</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {deps.map(dep=>\r\n                    \r\n                <tr key = {dep.EmployeeID} > \r\n                    \r\n                <td>{dep.EmployeeID}</td>\r\n                <td>{dep.EmployeeName}</td>\r\n                <td>{dep.Department}</td>\r\n                <td>{dep.MailID}</td>\r\n                <td>{dep.DOJ}</td>\r\n                <td>\r\n                    <ButtonToolbar>\r\n                        <Button \r\n                        className=\"mr-2\" \r\n                        variant=\"info\"\r\n                        // OnClick={()=> this.setState({editModalShow:true, depid:dep.DepartmentID, depname:dep.DepartmentName}) }\r\n                        onClick={()=> this.setState({editModalShow:true, depid:dep.EmployeeID, depname:dep.EmployeeName,\r\n                                                     empdepart:dep.Department, empemail:dep.MailID, empFecha:dep.DOJ\r\n                                 }) }\r\n                        >\r\n                            Editar\r\n                        </Button>\r\n\r\n                        {/* <EditDepModal \r\n                        show ={this.setState.editModalShow}\r\n                        onHide ={editModalClose}\r\n                        depid={depid}\r\n                        depname={depname}\r\n                        /> */}\r\n\r\n                    <EditEmployeeModal\r\n                    show={this.state.editModalShow}\r\n                    onHide={editModalClose}\r\n                    depid={depid}\r\n                    depname={depname}\r\n                    empdepart={empdepart}\r\n                    empemail={empemail}\r\n                    empFecha={empFecha}\r\n                    />\r\n\r\n                    </ButtonToolbar>\r\n                </td>\r\n                </tr>\r\n\r\n                )}\r\n            </tbody>\r\n\r\n            </Table>\r\n\r\n            <ButtonToolbar>\r\n                <Button  \r\n                variant='primary'\r\n                onClick= {()=> this.setState({addModalShow: true}) } >\r\n                    Agregar\r\n                </Button>\r\n\r\n\r\n                    <AddEmployeeModal\r\n                    show={this.state.addModalShow}\r\n                    onHide={addModalClose}\r\n                    />\r\n\r\n            </ButtonToolbar>\r\n\r\n\r\n            </div>\r\n\r\n            // <div className=\"mt-5 d-flex justify-content-left\">\r\n            // <h3>Este es el Empliado v\r\n            // </h3>\r\n\r\n            // </div>\r\n        )\r\n    }\r\n\r\n}","import React, {Component} from 'react';\r\nimport {Modal,     Row, Col, Form} from 'react-bootstrap';\r\n//import { Department } from './Department';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\n//import LockOutlinedIcon from '@material-ui/icons/LockOutlinedIcon';\r\n                            // '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n//import SignIn from './SignIn';\r\n\r\nimport { Card} from 'react-bootstrap';\r\nimport {  InputGroup} from 'react';\r\n\r\nimport {  Input, CardBody, CardGroup} from 'reactstrap';\r\n\r\n\r\n\r\nexport default class PaginaInicio extends Component{\r\n\r\n        constructor(props){\r\n            super(props);\r\n\r\n            this.state = {\r\n                Email: '',\r\n                Password: ''\r\n            }\r\n     \r\n            this.Password = this.Password.bind(this);\r\n            this.Email = this.Email.bind(this);\r\n            this.login = this.login.bind(this);\r\n\r\n\r\n        }\r\n\r\n        Email(event) {\r\n            this.setState({ Email: event.target.value })\r\n        }\r\n        Password(event) {\r\n            this.setState({ Password: event.target.value })\r\n        }\r\n        login(event) {\r\n            debugger;\r\n            fetch('http://localhost:22692/api/login/Login', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    Email: this.state.Email,\r\n                    Password: this.state.Password\r\n                })\r\n            }).then((Response) => Response.json())\r\n                .then((result) => {\r\n                    console.log(result);\r\n                    if (result.Status == 'Invalid')\r\n                        alert('Invalid User');\r\n                        \r\n                    else\r\n                        this.props.history.push(\"/Dashboard\");\r\n                        //alert('Si');\r\n                })\r\n        }\r\n\r\n        render(){\r\n            return(\r\n\r\n                    <div className=\"container\">\r\n\r\n\r\n                        <Container>\r\n                            <Row className=\"justify-content-center\">\r\n                                <Col md=\"9\" lg=\"7\" xl=\"6\">\r\n                                    <CardGroup>\r\n                                        <Card className=\"p-2\">\r\n                                            <CardBody>\r\n                                                <Form>\r\n                                                    <div class=\"row\" \r\n                                                    className=\"mb-2 pageheading\">\r\n                                                        <div class=\"col-sm-12 btn btn-primary\">\r\n                                                            Login\r\n                                    </div>\r\n                                                    </div>\r\n                                                    <InputGroup className=\"mb-3\">\r\n                                                        <Input type=\"text\" \r\n                                                        onChange={this.Email} \r\n                                                        placeholder=\"Enter Email\" />\r\n                                                    </InputGroup>\r\n                                                    <InputGroup className=\"mb-4\">\r\n                                                        <Input type=\"password\" \r\n                                                        onChange={this.Password} \r\n                                                        placeholder=\"Enter Password\" />\r\n                                                    </InputGroup>\r\n                                                    <Button onClick={this.login} \r\n                                                    color=\"success\" block>Login</Button>\r\n                                                </Form>\r\n                                            </CardBody>\r\n                                        </Card>\r\n                                    </CardGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n\r\n            \r\n                    </div>\r\n\r\n            )\r\n\r\n        }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, {Component} from 'react'\r\n\r\n// import {Table} from  'react-bootstrap';\r\n// //import {Form} from  'react-bootstrap';\r\n\r\n// import {Button, ButtonToolbar} from 'react-bootstrap';\r\n// import {AddDepModal}  from './AddDepModal';\r\n// import {EditDepModal} from './EditDepModal';\r\n// //import {types} from './typeS';\r\n\r\n// export class SignIn2 extends Component{\r\n\r\n//     constructor(props){\r\n//         super(props);\r\n//         this.state = {deps:[], addModalShow : false, editDepModal : false}\r\n//     }\r\n\r\n//     componentDidMount(){\r\n//         this.refreshList();\r\n//     }\r\n\r\n//     refreshList(){\r\n\r\n//         fetch('http://localhost:22692/api/Department')\r\n//         .then(response=> response.json())\r\n//         .then(data => {\r\n//             this.setState({deps:data});\r\n//          }\r\n//            );\r\n\r\n//         // this.setState({\r\n//         //     deps:[{\"DepartmentID\":1, \"DepartmentName\":\"IT\"},\r\n//         //           {\"DepartmentID\":2, \"DepartmentName\":\"IT\"}\r\n        \r\n//         // ]\r\n//         // })\r\n//     }\r\n\r\n\r\n//     componentDidUpdate(){\r\n//         this.refreshList();\r\n//     }\r\n\r\n//     render(){\r\n\r\n//         const {deps, depid, depname} = this.state;\r\n//         let addModalClose  =() => this.setState({addModalShow:false});\r\n//         let editModalClose =() => this.setState({editModalShow:false});\r\n\r\n//         return(\r\n\r\n//             <div>\r\n\r\n//                 <Table className=\"mt-4\" striped bordered hover size=\"sm\">\r\n                \r\n//                 <thead>\r\n//                     <tr>\r\n//                           <th>Codigo del Departamento</th>\r\n//                           <th>Nombre Departmento</th>\r\n//                           <th>Option</th>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                     {deps.map(dep=>\r\n                        \r\n//                     <tr key = {dep.DepartmentID} > \r\n                        \r\n//                     <td>{dep.DepartmentID}</td>\r\n//                     <td>{dep.DepartmentName}</td>\r\n//                     <td>\r\n//                         <ButtonToolbar>\r\n//                             <Button \r\n//                             className=\"mr-2\" \r\n//                             variant=\"info\"\r\n//                             // OnClick={()=> this.setState({editModalShow:true, depid:dep.DepartmentID, depname:dep.DepartmentName}) }\r\n//                                onClick={()=> this.setState({editModalShow:true, depid:dep.DepartmentID, depname:dep.DepartmentName}) }\r\n//                             >\r\n//                                 Editar\r\n//                             </Button>\r\n\r\n//                             {/* <EditDepModal \r\n//                               show ={this.setState.editModalShow}\r\n//                               onHide ={editModalClose}\r\n//                               depid={depid}\r\n//                               depname={depname}\r\n//                             /> */}\r\n\r\n//                         <EditDepModal\r\n//                         show={this.state.editModalShow}\r\n//                         onHide={editModalClose}\r\n//                         depid={depid}\r\n//                         depname={depname}\r\n//                         />\r\n\r\n//                         </ButtonToolbar>\r\n//                     </td>\r\n//                     </tr>\r\n\r\n//                     )}\r\n//                 </tbody>\r\n                \r\n//                 </Table>\r\n\r\n//                 <ButtonToolbar>\r\n//                     <Button  \r\n//                     variant='primary'\r\n//                     onClick= {()=> this.setState({addModalShow: true}) } >\r\n//                         Agregar departamento\r\n//                     </Button>\r\n\r\n\r\n//                         <AddDepModal\r\n//                         show={this.state.addModalShow}\r\n//                         onHide={addModalClose}\r\n//                         />\r\n\r\n//                 </ButtonToolbar>\r\n\r\n\r\n              \r\n\r\n\r\n//                 </div>\r\n\r\n//             // <div className=\"mt-5 d-flex justify-content-left\">\r\n//             //     <h3>Este es el departamento\r\n//             //     </h3>\r\n//             // </div>\r\n//         )\r\n//     }\r\n\r\n// }","import React, { Component } from \"react\";\r\nimport { Modal, Row, Col, Form } from \"react-bootstrap\";\r\n//import { Department } from './Department';\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\n//import LockOutlinedIcon from '@material-ui/icons/LockOutlinedIcon';\r\n// '@material-ui/core/IconButton'\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SignIn from \"./SignIn\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert';\r\n//import AlertTemplate from 'react-alert-template-basic';\r\nimport SweetAlert from 'sweetalert-react';\r\nimport { useAlert } from 'react-alert'\r\nimport swal from 'sweetalert';\r\nimport { AccessAlarm, ThreeDRotation, LockOutlinedIcon } from '@material-ui/icons';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\n\r\n\r\n\r\n\r\n\r\nexport class SignIn2 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //IconButton\r\n    this.state = { snackbaropen: false, snackbarmsg: \"\" };\r\n    this.handlerSubmit = this.handlerSubmit.bind(this);\r\n  }\r\n\r\n  fun() {\r\n    this.props.history.push(\"/path\");\r\n  }\r\n\r\n  //funcion snackbarclose\r\n  snackbarClose = (event) => {\r\n    this.setState({ snackbaropen: false });\r\n  };\r\n\r\n  handlerSubmit(event) {\r\n    \r\n    event.preventDefault();\r\n\r\n    //alert(event.target.DepartmentName.value);\r\n\r\n    fetch(\"http://localhost:22692/api/login/Login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        Email: event.target.Email.value,\r\n        Password: event.target.Password.value,\r\n      }),\r\n    })\r\n      .then((Response) => Response.json())\r\n      .then((result) => {\r\n        //console.log(result);\r\n        if (result.Status == \"Invalido\")\r\n\r\n        //alert(result.Message);         \r\n        //swal(result.Message);\r\n\r\n          swal ({\r\n            text: result.Message,\r\n            buttons: false,\r\n            icon: \"info\",\r\n            timer: 2000,\r\n            positions: \"Center\"\r\n\r\n          });\r\n\r\n        else if (result.Status == \"Exitoso\")\r\n\r\n        swal ({\r\n          text: result.Message,\r\n          buttons: false,\r\n          title: \"Bienvenido\",\r\n          icon: \"success\",\r\n          timer: 3000\r\n\r\n        }).then(() =>{\r\n          this.props.history.push(\"/Department\");\r\n        });\r\n\r\n        //alert(\"Exitoso\");\r\n        //this.fun.onSubmit.push(\"/Dashboard\");\r\n        //this.props.history.push(\"/Employee\");\r\n        else alert(\"Invalid User\");\r\n      });\r\n\r\n    // })\r\n    // .then(res=> res.json())\r\n    // .then((result)=>\r\n    // {\r\n    //    // alert(result);\r\n    //     //this.setState({snackbaropen:true, snackbarmsg:result})\r\n    //     if (result.Status == 'Exitoso')\r\n    //          this.props.history.push(\"/Department\");\r\n\r\n    // },\r\n    // (error)=>{\r\n    //     //alert('Failed')\r\n    //     alert('Sorrrrrry !!!! Un-authenticated User !!!!!')\r\n    // }\r\n    // )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        {/* SnackBar - alerta con Material UI*/}\r\n\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"center\", horizontal: \"center\" }}\r\n          open={this.state.snackbaropen}\r\n          autoHideDuration={3000}\r\n          onClose={this.snackbarClose}\r\n          message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n          action={[\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"Close\"\r\n              color=\"inherit\"\r\n              onClick={this.snackbarClose}\r\n            >\r\n              x\r\n            </IconButton>,\r\n          ]}\r\n        />\r\n\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div>\r\n            \r\n            {/* <Avatar>{ <AccountCircle color=\"primary\" />}</Avatar> */}\r\n            \r\n            \r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n            </Typography>\r\n            <form onSubmit={this.handlerSubmit} noValidate>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"Email\"\r\n                label=\"Email Address\"\r\n                name=\"Email\"\r\n                autoComplete=\"Email\"\r\n                autoFocus\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"Password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"Password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Remember me\"\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Sign In\r\n              </Button>\r\n\r\n\r\n              {/* <button onClick={() => this.setState({ show: true })}>Alert</button>\r\n              <SweetAlert\r\n                show={this.state.show}\r\n                title=\"Demo\"\r\n                text=\"SweetAlert in React\"\r\n                onConfirm={() => this.setState({ show: false })}\r\n              />\r\n\r\n              <button\r\n                    onClick={() => {\r\n                      //alert.show('Oh look, an alert!')\r\n                    }}\r\n                  >\r\n                    Show Alert\r\n              </button>\r\n              <useAlert\r\n\r\n              /> */}\r\n\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <Link href=\"#\" variant=\"body2\">\r\n                    Forgot password?\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link href=\"#\" variant=\"body2\">\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n          <Box mt={8}></Box>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// import React, {Component} from 'react'\r\n\r\n// import {Table} from  'react-bootstrap';\r\n// //import {Form} from  'react-bootstrap';\r\n\r\n// import {Button, ButtonToolbar} from 'react-bootstrap';\r\n// import {AddDepModal}  from './AddDepModal';\r\n// import {EditDepModal} from './EditDepModal';\r\n// //import {types} from './typeS';\r\n\r\n// export class SignIn2 extends Component{\r\n\r\n//     constructor(props){\r\n//         super(props);\r\n//         this.state = {deps:[], addModalShow : false, editDepModal : false}\r\n//     }\r\n\r\n//     componentDidMount(){\r\n//         this.refreshList();\r\n//     }\r\n\r\n//     refreshList(){\r\n\r\n//         fetch('http://localhost:22692/api/Department')\r\n//         .then(response=> response.json())\r\n//         .then(data => {\r\n//             this.setState({deps:data});\r\n//          }\r\n//            );\r\n\r\n//         // this.setState({\r\n//         //     deps:[{\"DepartmentID\":1, \"DepartmentName\":\"IT\"},\r\n//         //           {\"DepartmentID\":2, \"DepartmentName\":\"IT\"}\r\n\r\n//         // ]\r\n//         // })\r\n//     }\r\n\r\n//     componentDidUpdate(){\r\n//         this.refreshList();\r\n//     }\r\n\r\n//     render(){\r\n\r\n//         const {deps, depid, depname} = this.state;\r\n//         let addModalClose  =() => this.setState({addModalShow:false});\r\n//         let editModalClose =() => this.setState({editModalShow:false});\r\n\r\n//         return(\r\n\r\n//             <div>\r\n\r\n//                 <Table className=\"mt-4\" striped bordered hover size=\"sm\">\r\n\r\n//                 <thead>\r\n//                     <tr>\r\n//                           <th>Codigo del Departamento</th>\r\n//                           <th>Nombre Departmento</th>\r\n//                           <th>Option</th>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                     {deps.map(dep=>\r\n\r\n//                     <tr key = {dep.DepartmentID} >\r\n\r\n//                     <td>{dep.DepartmentID}</td>\r\n//                     <td>{dep.DepartmentName}</td>\r\n//                     <td>\r\n//                         <ButtonToolbar>\r\n//                             <Button\r\n//                             className=\"mr-2\"\r\n//                             variant=\"info\"\r\n//                             // OnClick={()=> this.setState({editModalShow:true, depid:dep.DepartmentID, depname:dep.DepartmentName}) }\r\n//                                onClick={()=> this.setState({editModalShow:true, depid:dep.DepartmentID, depname:dep.DepartmentName}) }\r\n//                             >\r\n//                                 Editar\r\n//                             </Button>\r\n\r\n//                             {/* <EditDepModal\r\n//                               show ={this.setState.editModalShow}\r\n//                               onHide ={editModalClose}\r\n//                               depid={depid}\r\n//                               depname={depname}\r\n//                             /> */}\r\n\r\n//                         <EditDepModal\r\n//                         show={this.state.editModalShow}\r\n//                         onHide={editModalClose}\r\n//                         depid={depid}\r\n//                         depname={depname}\r\n//                         />\r\n\r\n//                         </ButtonToolbar>\r\n//                     </td>\r\n//                     </tr>\r\n\r\n//                     )}\r\n//                 </tbody>\r\n\r\n//                 </Table>\r\n\r\n//                 <ButtonToolbar>\r\n//                     <Button\r\n//                     variant='primary'\r\n//                     onClick= {()=> this.setState({addModalShow: true}) } >\r\n//                         Agregar departamento\r\n//                     </Button>\r\n\r\n//                         <AddDepModal\r\n//                         show={this.state.addModalShow}\r\n//                         onHide={addModalClose}\r\n//                         />\r\n\r\n//                 </ButtonToolbar>\r\n\r\n//                 </div>\r\n\r\n//             // <div className=\"mt-5 d-flex justify-content-left\">\r\n//             //     <h3>Este es el departamento\r\n//             //     </h3>\r\n//             // </div>\r\n//         )\r\n//     }\r\n\r\n// }\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Navigation } from './Navigation';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Select campaign settings', 'Create an ad group', 'Create an adss'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return 'Select campaign settings...';\r\n\r\n    case 1:\r\n      return 'What is an ad group anyways?';\r\n    case 2:\r\n      return 'This is the bit I really care about!';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function HorizontalLinearStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [skipped, setSkipped] = React.useState(new Set());\r\n  const steps = getSteps();\r\n\r\n  const isStepOptional = (step) => {\r\n    return step === 1;\r\n  };\r\n\r\n  const isStepSkipped = (step) => {\r\n    return skipped.has(step);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    let newSkipped = skipped;\r\n    if (isStepSkipped(activeStep)) {\r\n      newSkipped = new Set(newSkipped.values());\r\n      newSkipped.delete(activeStep);\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    if (!isStepOptional(activeStep)) {\r\n      // You probably want to guard against something like this,\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped((prevSkipped) => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep);\r\n      return newSkipped;\r\n    });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  return (\r\n      \r\n    <div className={classes.root}>\r\n        <Navigation></Navigation>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          const labelProps = {};\r\n          if (isStepOptional(index)) {\r\n            labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\r\n          }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepLabel {...labelProps}>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Button onClick={handleReset} className={classes.button}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <div>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                Back\r\n              </Button>\r\n              {isStepOptional(activeStep) && (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleSkip}\r\n                  className={classes.button}\r\n                >\r\n                  Skip\r\n                </Button>\r\n              )}\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n              >\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\n//import logo from './logo.svg';\nimport \"./App.css\";\nimport { Home } from \"./componets/Home\";\nimport { Department } from \"./componets/Department\";\nimport { Employee } from \"./componets/Employee\";\nimport { Navigation } from \"./componets/Navigation\";\nimport Button from \"@material-ui/core/Button\";\n//import Button from 'react-bootstrap/Button'\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport SignIn from \"./componets/SignIn\";\nimport PaginaInicio from \"./componets/PaginaInicio\";\nimport { SignIn2 } from \"./componets/SignIn2\";\nimport  Formulario  from \"./componets/Formulario\";\n//import Login from \"./componets/Login\";\n//import { NavLink } from 'react-bootstrap';\nimport { useAlert } from 'react-alert';\nimport { withAlert } from 'react-alert'\n\nfunction App() {\n\n  return (\n\n    <BrowserRouter>\n      <div className=\"Container m-5 pb-5\">\n        {/* <Button variant=\"contained\" color=\"primary\" disableElevation>\n          Iniciar Sesion\n        </Button> */}\n\n        {/* <h3 className=\"m-3 d-flex justify-content-center\">\n          Reac JS con Web api\n        </h3>\n        <h5 className=\"m-3 d-flex justify-content-center\">\n          Portal de gestión de empleados\n        </h5> */}\n\n        {/* <Navigation></Navigation> */}\n\n        <Switch>\n          {/* <Route path=\"/Login\" component={Login} exact /> */}\n          <Route path=\"/\" component={SignIn2} exact />\n          {/* <Route path=\"/\" component={Home} exact /> */}\n          <Route path=\"/Home\" component={Home} exact />\n          <Route path=\"/department\" component={Department} exact />\n          <Route path=\"/Employee\" component={Employee} exact />\n          <Route path=\"/SignIn2\" component={SignIn2} exact />\n        </Switch>\n\n        {/* <Button>Guardar</Button> */}\n      </div>\n    </BrowserRouter>\n  );\n}\n\n\n// const App = () => {\n//   //const alert = useAlert()\n \n//   return (\n//     <BrowserRouter>\n//       <div className=\"Container m-5 pb-5\">\n//         {/* <Button variant=\"contained\" color=\"primary\" disableElevation>\n//           Iniciar Sesion\n//         </Button> */}\n\n//         {/* <h3 className=\"m-3 d-flex justify-content-center\">\n//           Reac JS con Web api\n//         </h3>\n//         <h5 className=\"m-3 d-flex justify-content-center\">\n//           Portal de gestión de empleados\n//         </h5> */}\n\n//         {/* <Navigation></Navigation> */}\n\n//         <Switch>\n//           {/* <Route path=\"/Login\" component={Login} exact /> */}\n//           <Route path=\"/\" component={SignIn2} exact />\n//           {/* <Route path=\"/\" component={Home} exact /> */}\n//           <Route path=\"/Home\" component={Home} exact />\n//           <Route path=\"/department\" component={Department} exact />\n//           <Route path=\"/Employee\" component={Employee} exact />\n//           <Route path=\"/Formulario\" component={Formulario} exact />\n//           <Route path=\"/SignIn2\" component={SignIn2} exact />\n//         </Switch>\n\n//         {/* <Button>Guardar</Button> */}\n//       </div>\n//      </BrowserRouter>\n\n\n//   )\n// }\n\n\nexport default  App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from \"react\";\r\n//import './App.css';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardGroup,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Row,\r\n} from \"reactstrap\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      Email: \"\",\r\n      Password: \"\",\r\n    };\r\n\r\n    this.Password = this.Password.bind(this);\r\n    this.Email = this.Email.bind(this);\r\n    this.login = this.login.bind(this);\r\n  }\r\n\r\n  Email(event) {\r\n    this.setState({ Email: event.target.value });\r\n  }\r\n  Password(event) {\r\n    this.setState({ Password: event.target.value });\r\n  }\r\n  login(event) {\r\n    debugger;\r\n    fetch(\"http://localhost:22692/Api/login/Login\", {\r\n      method: \"post\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        Email: this.state.Email,\r\n        Password: this.state.Password,\r\n      }),\r\n    })\r\n      .then((Response) => Response.json())\r\n      .then((result) => {\r\n        //console.log(result);\r\n        if (result.Status == \"Invalido\") alert(result.Message);\r\n        else if (result.Status == \"Exitoso\")\r\n          this.props.history.push(\"/IniPrueba\");\r\n        else alert(result.Message);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app flex-row align-items-center\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col md=\"9\" lg=\"7\" xl=\"6\">\r\n              <CardGroup>\r\n                <Card className=\"p-2\">\r\n                  <CardBody>\r\n                    <Form>\r\n                      <div class=\"row\" className=\"mb-2 pageheading\">\r\n                        <div class=\"col-sm-12 btn btn-primary\">Login</div>\r\n                      </div>\r\n                      <br></br>\r\n                      <InputGroup className=\"mb-3\">\r\n                        {/* <Input type=\"text\" \r\n                                                 onChange={this.Email} \r\n                                                 placeholder=\"Enter Email\" /> */}\r\n\r\n                        <TextField\r\n                          variant=\"outlined\"\r\n                          margin=\"normal\"\r\n                          required\r\n                          //fullWidth\r\n                          id=\"Email\"\r\n                          label=\"Email Address\"\r\n                          name=\"Email\"\r\n                          autoComplete=\"Email\"\r\n                          autoFocus\r\n                          onChange={this.Email}\r\n                        />\r\n                      </InputGroup>\r\n                      <br></br>\r\n                      <InputGroup className=\"mb-4\">\r\n                        {/* <Input type=\"password\" \r\n                                                onChange={this.Password} \r\n                                                placeholder=\"Enter Password\" /> */}\r\n\r\n                        <TextField\r\n                          type=\"password\"\r\n                          variant=\"outlined\"\r\n                          margin=\"normal\"\r\n                          required\r\n                          //fullWidth\r\n                          id=\"password\"\r\n                          label=\"Enter Password\"\r\n                          name=\"password\"\r\n                          autoComplete=\"password\"\r\n                          autoFocus\r\n                          onChange={this.Password}\r\n                        />\r\n                      </InputGroup>\r\n                      <br></br>\r\n                      <Button onClick={this.login} color=\"success\" block>\r\n                        Login\r\n                      </Button>\r\n                      <br></br>\r\n                    </Form>\r\n                  </CardBody>\r\n                </Card>\r\n              </CardGroup>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport SignIn from \"./componets/SignIn\";\nimport { SignIn2 } from \"./componets/SignIn2\";\n//import PaginaInicio from './PaginaInicio';\n// import { Login } from './componets/Login';\n//import PaginaInicio from './componets/PaginaInicio';\nimport Ingreso from \"./App\";\n//import Login from \"./componets/Login\";\nimport IniPrueba from \"./componets/IniPrueba\";\n\nimport { render } from 'react-dom';\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert';\nimport AlertTemplate from 'react-alert-template-basic';\n\n// optional configuration\nconst options = {\n  // you can also just use 'bottom center'\n  position: positions.BOTTOM_CENTER,\n  timeout: 5000,\n  offset: '30px',\n  // you can also just use 'scale'\n  transition: transitions.SCALE\n}\n \nconst Root = () => (\n  <AlertProvider template={AlertTemplate} {...options}>\n    <App />\n  </AlertProvider>\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <PaginaInicio></PaginaInicio> */}\n    {/* <SignIn2 /> */}\n    {/* <IniPrueba /> */}\n    {/* <Ingreso /> */}\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}